{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Text } from 'react-native-paper';\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LaReg = function LaReg(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empty = _useState8[0],\n      setEmpty = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalVisible = _useState14[0],\n      setModalVisible = _useState14[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    var emptyError = emptyfield(empty.value);\n    var phoneError = emptyfield(phone.value);\n\n    if (emailError || passwordError || nameError || emptyError || phoneError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      setEmpty(_objectSpread(_objectSpread({}, empty), {}, {\n        error: emptyError\n      }));\n      setPhone(_objectSpread(_objectSpread({}, empty), {}, {\n        error: phoneError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  var pickfromGallery = function pickfromGallery() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickfromCamera = function pickfromCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"skyblue\",\n      translucent: true\n    }), _jsx(ScrollView, {\n      style: styles.head,\n      children: _jsxs(View, {\n        style: styles.headcon,\n        children: [_jsx(Header, {\n          children: \"Create Account\"\n        }), _jsx(TextInput, {\n          label: \"Manager Name\",\n          returnKeyType: \"next\",\n          value: name.value,\n          onChangeText: function onChangeText(text) {\n            return setName({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!name.error,\n          errorText: name.error\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          returnKeyType: \"next\",\n          value: email.value,\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!email.error,\n          errorText: email.error,\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"Phone No\",\n          returnKeyType: \"next\",\n          value: phone.value,\n          onChangeText: function onChangeText(text) {\n            return setPhone({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!phone.error,\n          errorText: phone.error\n        }), _jsx(TextInput, {\n          label: \"Address\",\n          returnKeyType: \"next\",\n          value: empty.value,\n          onChangeText: function onChangeText(text) {\n            return setEmpty({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!empty.error,\n          errorText: empty.error\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          returnKeyType: \"done\",\n          value: password.value,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!password.error,\n          errorText: password.error,\n          secureTextEntry: true\n        }), _jsx(Dropdown, {}), _jsx(Button, {\n          mode: \"outlined\",\n          icon: 'upload',\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          labelStyle: {\n            color: '#3d3c3a'\n          },\n          style: {\n            marginTop: 6,\n            padding: 4,\n            width: '100%',\n            borderWidth: 1\n          },\n          children: \"Upload Image\"\n        }), _jsx(Image, {\n          style: styles.imagearea,\n          source: {\n            uri: image\n          }\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: styles.modalview,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              icon: \"camera\",\n              onPress: pickfromCamera,\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Camera\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              icon: \"image-area\",\n              onPress: pickfromGallery,\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Gallery\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Cancel\"\n            })]\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: _onSignUpPressed,\n          style: {\n            marginTop: 6\n          },\n          children: \"Sign Up\"\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"Already have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.goBack('LoginScreen');\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Login\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  headcon: {\n    alignItems: 'center'\n  },\n  container: {\n    width: '80%',\n    height: '100%',\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  modalview: {\n    position: 'absolute',\n    bottom: 2,\n    width: '100%',\n    backgroundColor: '#e9f0ef'\n  }\n});\nexport default LaReg;","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/Registration/LaReg.js"],"names":["React","useState","Text","Logo","Header","Button","TextInput","Dropdown","theme","emailValidator","passwordValidator","nameValidator","emptyfield","ImagePicker","LaReg","navigation","value","error","name","setName","email","setEmail","password","setPassword","empty","setEmpty","phone","setPhone","image","setImage","modalVisible","setModalVisible","_onSignUpPressed","nameError","emailError","passwordError","emptyError","phoneError","navigate","pickfromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","cropping","width","height","quality","result","console","log","cancelled","uri","pickfromCamera","launchCameraAsync","styles","container","head","headcon","text","color","marginTop","padding","borderWidth","imagearea","Alert","alert","modalview","alignSelf","row","goBack","link","StyleSheet","create","flex","alignItems","flexDirection","marginBottom","fontWeight","colors","primary","position","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {ScrollView, View, StyleSheet, TouchableOpacity,Alert, Modal, Image, StatusBar } from 'react-native';\nimport { Text } from 'react-native-paper';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport Dropdown from '../components/Dropdown';\nimport { theme } from '../core/theme';\nimport { emailValidator } from '../helpers/emailValidator';\nimport { passwordValidator } from '../helpers/passwordValidator';\nimport { nameValidator } from '../helpers/nameValidator';\nimport {emptyfield } from '../helpers/emptyfield';\nimport * as ImagePicker from 'expo-image-picker';\n\nconst LaReg = ( {navigation}) => {\n const [name, setName] = useState({ value: '', error: '' });\n  const [email, setEmail] = useState({ value: '', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n  const [empty, setEmpty] = useState({ value: '', error: '' });\n  const [phone, setPhone] = useState({ value: '', error: '' });\n  const [image, setImage] = useState();\n  const [modalVisible, setModalVisible] = useState(false);\n  \n  const _onSignUpPressed = () => {\n    const nameError = nameValidator(name.value);\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n    const emptyError = emptyfield(empty.value);\n    const phoneError = emptyfield(phone.value);\n\n    if (emailError || passwordError || nameError || emptyError||phoneError) {\n      setName({ ...name, error: nameError });\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      setEmpty({ ...empty, error: emptyError });\n      setPhone({ ...empty, error: phoneError });\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n  // const _onSignUpPressed = () => {\n  //  try {\n  //     if (email.value !== '' && password.value !== '') {\n  //         auth.createUserWithEmailAndPassword(email.value, password.value); \n  //         navigation.replace('LoginScreen', {otherParam: String})\n  //     }\n  //   } catch (error) {\n  //       alert(error.message)\n  //   }\n  // };\n\n  const pickfromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width:300, \n      height:300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  }\n  const pickfromCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width:300, \n      height:300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  }\n\n  return (\n    <View style= {styles.container}>\n      <StatusBar backgroundColor=\"skyblue\" translucent={true}/>\n      {/* <Logo /> */}\n      <ScrollView style= {styles.head}>\n      <View style= {styles.headcon}>\n      <Header>Create Account</Header>\n\n      <TextInput\n        label=\"Manager Name\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={text => setName({ value: text, error: '' })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Phone No\"\n        returnKeyType=\"next\"\n        value={phone.value}\n        onChangeText={text => setPhone({ value: text, error: '' })}\n        error={!!phone.error}\n        errorText={phone.error}\n      />\n      <TextInput\n        label=\"Address\"\n        returnKeyType=\"next\"\n        value={empty.value}\n        onChangeText={text => setEmpty({ value: text, error: '' })}\n        error={!!empty.error}\n        errorText={empty.error}\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <Dropdown/>\n      <Button\n        mode=\"outlined\"\n        icon = {'upload'} \n        onPress = {() =>setModalVisible(true)}\n        labelStyle={{color: '#3d3c3a'}}\n        style={{marginTop: 6, padding:4, width:'100%',borderWidth: 1}}>\n        Upload Image\n      </Button>\n      <Image style = {styles.imagearea} source ={{uri:image}}></Image>\n      <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style = {styles.modalview}>\n          <Button\n            mode=\"contained\"\n            icon = 'camera'\n            onPress = {pickfromCamera}\n            style={{marginTop: 10, alignSelf: 'center', }}>\n            Camera\n          </Button>\n          <Button\n            mode=\"contained\"\n            icon = 'image-area'\n            onPress = {pickfromGallery}\n            style={{marginTop: 10, alignSelf: 'center' }}>\n            Gallery\n          </Button>\n          <Button\n            mode=\"contained\"\n            onPress = {()=> setModalVisible(!modalVisible)}\n            style={{marginTop: 10, alignSelf: 'center' }}>\n            Cancel\n          </Button>\n          </View>\n        \n        </Modal>\n      <Button\n        mode=\"contained\"\n        onPress={_onSignUpPressed}\n        style={{ marginTop: 6 }}>\n        Sign Up\n      </Button>\n      <View style={styles.row}>\n        <Text>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.goBack('LoginScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n      </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  headcon: {\n    alignItems: 'center',\n  },\n  container: {\n    width: '80%',\n    height: '100%',\n    alignSelf:'center',\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  modalview: {\n    position: 'absolute',\n    bottom:2,\n    width:'100%',\n    backgroundColor: '#e9f0ef'\n  },\n});\n\nexport default LaReg;"]},"metadata":{},"sourceType":"module"}