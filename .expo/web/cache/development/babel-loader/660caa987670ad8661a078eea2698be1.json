{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text } from \"react-native-paper\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport { theme } from \"./core/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { emailValidator } from \"./helpers/emailValidator\";\nimport { passwordValidator } from \"./helpers/passwordValidator\";\nimport axios from \"axios\";\nimport url from \"../../url.json\";\nimport Home from \"../../Portals/Pharmacy Management Portal/Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  var otherParam = route.params.otherParam;\n\n  var onLoginPressed = function onLoginPressed() {\n    var form_data, config;\n    return _regeneratorRuntime.async(function onLoginPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form_data = new FormData();\n            form_data.append(\"email\", email);\n            form_data.append(\"password\", password);\n            config = {\n              method: \"post\",\n              url: \"http://192.168.0.104:3000/users/login\",\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              },\n              body: form_data\n            };\n            axios(config).then(function (response) {\n              console.log(\"responce data : \", response.data);\n            }).catch(function (error) {\n              console.log(\"error : \", error);\n            });\n            console.log(\"after axios\");\n            console.log(otherParam);\n\n            if (otherParam == \"PharReg\") {\n              navigation.navigate(\"Home\");\n            } else if (otherParam == \"PaReg\") {\n              navigation.navigate(\"Root\");\n            } else if (otherParam == \"BDReg\") {\n              navigation.navigate(\"HomeBlood\");\n            } else if (otherParam == \"LaReg\") {\n              navigation.navigate(\"HomeLab\");\n            } else if (otherParam == \"AmReg\") {\n              navigation.navigate(\"HomeAmbulance\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Logo, {}), _jsx(Header, {\n      children: \"Welcome \"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"ResetPasswordScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Genral\", {\n            otherParam: otherParam\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"85%\",\n    alignSelf: \"center\",\n    alignItems: \"center\"\n  },\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 14\n  },\n  forgot: {\n    fontWeight: \"bold\",\n    fontSize: 12,\n    color: theme.colors.primary\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/Login.js"],"names":["React","useState","useEffect","Text","Logo","Header","Button","TextInput","theme","useNavigation","emailValidator","passwordValidator","axios","url","Home","LoginScreen","route","email","setEmail","password","setPassword","navigation","otherParam","params","onLoginPressed","form_data","FormData","append","config","method","headers","body","then","response","console","log","data","catch","error","navigate","styles","container","value","text","forgotPassword","forgot","row","link","StyleSheet","create","flex","width","alignSelf","alignItems","marginBottom","flexDirection","marginTop","fontWeight","fontSize","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TouchableOpacity, StyleSheet, View, ScrollView } from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport { theme } from \"./core/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { emailValidator } from \"./helpers/emailValidator\";\nimport { passwordValidator } from \"./helpers/passwordValidator\";\nimport axios from \"axios\";\nimport url from \"../../url.json\";\n//import FormData from \"form-data\";\n\nimport Home from \"../../Portals/Pharmacy Management Portal/Home\";\n//import Firebase from \"./firebase\";\n//const auth = Firebase.auth();\n\nexport default function LoginScreen({ route }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n  const { otherParam } = route.params;\n\n  const onLoginPressed = async () => {\n    // const emailError = emailValidator(email.value);\n    // const passwordError = passwordValidator(password.value);\n\n    // if (emailError || passwordError) {\n    //   setEmail({ ...email, error: emailError });\n    //   setPassword({ ...password, error: passwordError });\n    //   return;\n    // }\n\n    // console.log(\"before axios\");\n    // console.log(url.url);\n    // console.log(email);\n    // console.log(password);\n    let form_data = new FormData();\n    form_data.append(\"email\", email);\n    form_data.append(\"password\", password);\n    //form_data.append(\"user_type\", \"patient\");\n\n    // let data = {\n    //   email: email,\n    //   password: password,\n    // };\n\n    var config = {\n      method: \"post\",\n      url: `http://192.168.0.104:3000/users/login`,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: form_data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(\"responce data : \", response.data);\n      })\n      .catch(function (error) {\n        console.log(\"error : \", error);\n      });\n    // axios({\n    //   method: \"post\",\n    //   url: `${url.url}users/login`,\n    //   data: form_data,\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // })\n    //   .then((res) => {\n    //     console.log(\"email : \", res.data);\n\n    //     if (otherParam == \"PharReg\") {\n    //       navigation.navigate(\"Home\");\n    //     } else if (otherParam == \"PaReg\") {\n    //       navigation.navigate(\"Root\");\n    //     } else if (otherParam == \"BDReg\") {\n    //       navigation.navigate(\"HomeBlood\");\n    //     } else if (otherParam == \"LaReg\") {\n    //       navigation.navigate(\"HomeLab\");\n    //     } else if (otherParam == \"AmReg\") {\n    //       navigation.navigate(\"HomeAmbulance\");\n    //     } else {\n    //       console.log(\"Incorrect Credentials\");\n    //     }\n    //   })\n    //   .catch((err) => {\n    //     console.log(\"The database error is : \", err);\n    //   });\n\n    console.log(\"after axios\");\n\n    console.log(otherParam);\n    if (otherParam == \"PharReg\") {\n      navigation.navigate(\"Home\");\n    } else if (otherParam == \"PaReg\") {\n      navigation.navigate(\"Root\");\n    } else if (otherParam == \"BDReg\") {\n      navigation.navigate(\"HomeBlood\");\n    } else if (otherParam == \"LaReg\") {\n      navigation.navigate(\"HomeLab\");\n    } else if (otherParam == \"AmReg\") {\n      navigation.navigate(\"HomeAmbulance\");\n    }\n    //navigation.navigate(\"Root\");\n  };\n  // const Value = ()=> {\n  //   if (route.params.otherParam === 'PaReg'){\n  //     return 'Patient'\n  //   }\n  //   else if (route.params.otherParam === 'AmReg'){\n  //     return 'Patient'\n  //   }\n  //   else if (route.params.otherParam === 'PaReg'){\n  //     return 'Patient'\n  //   }\n  //   else if (route.params.otherParam === 'PaReg'){\n  //     return 'Patient'\n  //   }\n  //   else if (route.params.otherParam === 'PaReg'){\n  //     return 'Patient'\n  //   }\n  //   else if (route.params.otherParam === 'PaReg'){\n  //     return 'Patient'\n  //   }\n\n  // }\n\n  //   const onLoginPressed = () => {\n  //   try {\n  //     if (email != '' && password != '') {\n  //       auth.signInWithEmailAndPassword(email.value, password.value).\n  //       then(() => {navigation.navigate('Dashboard')}\n  //       ).catch(() => alert(\"Invalid\"))\n  //     }\n  //   } catch (error) {\n  //     console.log(error.message);\n  //   }\n  // };\n\n  return (\n    <View style={styles.container}>\n      <Logo />\n      <Header>Welcome </Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail(text)}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword(text)}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"ResetPasswordScreen\")}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={onLoginPressed}>\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Genral\", { otherParam })}\n        >\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"85%\",\n    alignSelf: \"center\",\n    alignItems: \"center\",\n  },\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 14,\n  },\n  forgot: {\n    fontWeight: \"bold\",\n    fontSize: 12,\n    color: theme.colors.primary,\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}