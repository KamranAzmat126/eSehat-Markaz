{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Text } from \"react-native-paper\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DocReg = function DocReg(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empty = _useState8[0],\n      setEmpty = _useState8[1];\n\n  var _useState9 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var _useState11 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      spec = _useState12[0],\n      setSpec = _useState12[1];\n\n  var _useState13 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      exp = _useState14[0],\n      setExp = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      image = _useState16[0],\n      setImage = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      modalVisible = _useState18[0],\n      setModalVisible = _useState18[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    var emptyError = emptyfield(empty.value);\n    var phoneError = emptyfield(phone.value);\n    var specError = emptyfield(spec.value);\n    var expError = emptyfield(exp.value);\n\n    if (emailError || passwordError || nameError || emptyError || phoneError || specError || expError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      setEmpty(_objectSpread(_objectSpread({}, empty), {}, {\n        error: emptyError\n      }));\n      setPhone(_objectSpread(_objectSpread({}, empty), {}, {\n        error: phoneError\n      }));\n      setSpec(_objectSpread(_objectSpread({}, empty), {}, {\n        error: specError\n      }));\n      setExp(_objectSpread(_objectSpread({}, empty), {}, {\n        error: expError\n      }));\n      return;\n    }\n\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  var pickfromGallery = function pickfromGallery() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickfromCamera = function pickfromCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"skyblue\",\n      translucent: true\n    }), _jsx(ScrollView, {\n      style: styles.head,\n      children: _jsxs(View, {\n        style: styles.headcon,\n        children: [_jsx(Header, {\n          children: \"Create Account\"\n        }), _jsx(TextInput, {\n          label: \"Name\",\n          returnKeyType: \"next\",\n          value: name.value,\n          onChangeText: function onChangeText(text) {\n            return setName({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!name.error,\n          errorText: name.error\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          returnKeyType: \"next\",\n          value: email.value,\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!email.error,\n          errorText: email.error,\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"Phone No\",\n          returnKeyType: \"next\",\n          value: phone.value,\n          onChangeText: function onChangeText(text) {\n            return setPhone({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!phone.error,\n          errorText: phone.error\n        }), _jsx(TextInput, {\n          label: \"PMC No\",\n          returnKeyType: \"next\",\n          value: empty.value,\n          onChangeText: function onChangeText(text) {\n            return setEmpty({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!empty.error,\n          errorText: empty.error\n        }), _jsx(TextInput, {\n          label: \"Specialty\",\n          returnKeyType: \"next\",\n          value: spec.value,\n          onChangeText: function onChangeText(text) {\n            return setSpec({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!spec.error,\n          errorText: spec.error\n        }), _jsx(TextInput, {\n          label: \"Experience\",\n          returnKeyType: \"next\",\n          value: exp.value,\n          onChangeText: function onChangeText(text) {\n            return setExp({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!exp.error,\n          errorText: exp.error\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          returnKeyType: \"done\",\n          value: password.value,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!password.error,\n          errorText: password.error,\n          secureTextEntry: true\n        }), _jsx(Dropdown, {}), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"upload\",\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          labelStyle: {\n            color: \"#3d3c3a\"\n          },\n          style: {\n            marginTop: 6,\n            padding: 4,\n            width: \"100%\",\n            borderWidth: 1\n          },\n          children: \"Upload Image\"\n        }), _jsx(Image, {\n          style: styles.imagearea,\n          source: {\n            uri: image\n          }\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: styles.modalview,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              icon: \"camera\",\n              onPress: pickfromCamera,\n              style: {\n                marginTop: 10,\n                alignSelf: \"center\"\n              },\n              children: \"Camera\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              icon: \"image-area\",\n              onPress: pickfromGallery,\n              style: {\n                marginTop: 10,\n                alignSelf: \"center\"\n              },\n              children: \"Gallery\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              style: {\n                marginTop: 10,\n                alignSelf: \"center\"\n              },\n              children: \"Cancel\"\n            })]\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: _onSignUpPressed,\n          style: {\n            marginTop: 6\n          },\n          children: \"Sign Up\"\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"Already have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.goBack(\"LoginScreen\");\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Login\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  headcon: {\n    alignItems: \"center\"\n  },\n  container: {\n    width: \"80%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n    alignItems: \"center\"\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  modalview: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#e9f0ef\"\n  }\n});\nexport default DocReg;","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/Registration/DocReg.js"],"names":["React","useState","Text","Logo","Header","Button","TextInput","Dropdown","theme","emailValidator","passwordValidator","nameValidator","emptyfield","ImagePicker","DocReg","navigation","value","error","name","setName","email","setEmail","password","setPassword","empty","setEmpty","phone","setPhone","spec","setSpec","exp","setExp","image","setImage","modalVisible","setModalVisible","_onSignUpPressed","nameError","emailError","passwordError","emptyError","phoneError","specError","expError","navigate","pickfromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","cropping","width","height","quality","result","console","log","cancelled","uri","pickfromCamera","launchCameraAsync","styles","container","head","headcon","text","color","marginTop","padding","borderWidth","imagearea","Alert","alert","modalview","alignSelf","row","goBack","link","StyleSheet","create","flex","alignItems","flexDirection","marginBottom","fontWeight","colors","primary","position","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ScrollView,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Image,\n  StatusBar,\n} from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from \"expo-image-picker\";\n// import Firebase from \"../firebase\";\n// const auth = Firebase.auth();\n\nconst DocReg = ({ navigation }) => {\n  const [name, setName] = useState({ value: \"\", error: \"\" });\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [empty, setEmpty] = useState({ value: \"\", error: \"\" });\n  const [phone, setPhone] = useState({ value: \"\", error: \"\" });\n  const [spec, setSpec] = useState({ value: \"\", error: \"\" });\n  const [exp, setExp] = useState({ value: \"\", error: \"\" });\n  const [image, setImage] = useState();\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const _onSignUpPressed = () => {\n    const nameError = nameValidator(name.value);\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n    const emptyError = emptyfield(empty.value);\n    const phoneError = emptyfield(phone.value);\n    const specError = emptyfield(spec.value);\n    const expError = emptyfield(exp.value);\n\n    if (\n      emailError ||\n      passwordError ||\n      nameError ||\n      emptyError ||\n      phoneError ||\n      specError ||\n      expError\n    ) {\n      setName({ ...name, error: nameError });\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      setEmpty({ ...empty, error: emptyError });\n      setPhone({ ...empty, error: phoneError });\n      setSpec({ ...empty, error: specError });\n      setExp({ ...empty, error: expError });\n      return;\n    }\n\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  // const _onSignUpPressed = () => {\n  //  try {\n  //     if (email.value !== '' && password.value !== '') {\n  //         auth.createUserWithEmailAndPassword(email.value, password.value);\n  //         navigation.replace('LoginScreen', {otherParam: String})\n  //     }\n  //   } catch (error) {\n  //       alert(error.message)\n  //   }\n  // };\n\n  const pickfromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width: 300,\n      height: 300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n  const pickfromCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width: 300,\n      height: 300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor=\"skyblue\" translucent={true} />\n      {/* <Logo /> */}\n      <ScrollView style={styles.head}>\n        <View style={styles.headcon}>\n          <Header>Create Account</Header>\n\n          <TextInput\n            label=\"Name\"\n            returnKeyType=\"next\"\n            value={name.value}\n            onChangeText={(text) => setName({ value: text, error: \"\" })}\n            error={!!name.error}\n            errorText={name.error}\n          />\n          <TextInput\n            label=\"Email\"\n            returnKeyType=\"next\"\n            value={email.value}\n            onChangeText={(text) => setEmail({ value: text, error: \"\" })}\n            error={!!email.error}\n            errorText={email.error}\n            autoCapitalize=\"none\"\n            autoCompleteType=\"email\"\n            textContentType=\"emailAddress\"\n            keyboardType=\"email-address\"\n          />\n          <TextInput\n            label=\"Phone No\"\n            returnKeyType=\"next\"\n            value={phone.value}\n            onChangeText={(text) => setPhone({ value: text, error: \"\" })}\n            error={!!phone.error}\n            errorText={phone.error}\n          />\n          <TextInput\n            label=\"PMC No\"\n            returnKeyType=\"next\"\n            value={empty.value}\n            onChangeText={(text) => setEmpty({ value: text, error: \"\" })}\n            error={!!empty.error}\n            errorText={empty.error}\n          />\n          <TextInput\n            label=\"Specialty\"\n            returnKeyType=\"next\"\n            value={spec.value}\n            onChangeText={(text) => setSpec({ value: text, error: \"\" })}\n            error={!!spec.error}\n            errorText={spec.error}\n          />\n          <TextInput\n            label=\"Experience\"\n            returnKeyType=\"next\"\n            value={exp.value}\n            onChangeText={(text) => setExp({ value: text, error: \"\" })}\n            error={!!exp.error}\n            errorText={exp.error}\n          />\n\n          <TextInput\n            label=\"Password\"\n            returnKeyType=\"done\"\n            value={password.value}\n            onChangeText={(text) => setPassword({ value: text, error: \"\" })}\n            error={!!password.error}\n            errorText={password.error}\n            secureTextEntry\n          />\n          <Dropdown />\n          <Button\n            mode=\"outlined\"\n            icon={\"upload\"}\n            onPress={() => setModalVisible(true)}\n            labelStyle={{ color: \"#3d3c3a\" }}\n            style={{ marginTop: 6, padding: 4, width: \"100%\", borderWidth: 1 }}\n          >\n            Upload Image\n          </Button>\n          <Image style={styles.imagearea} source={{ uri: image }}></Image>\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {\n              Alert.alert(\"Modal has been closed.\");\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View style={styles.modalview}>\n              <Button\n                mode=\"contained\"\n                icon=\"camera\"\n                onPress={pickfromCamera}\n                style={{ marginTop: 10, alignSelf: \"center\" }}\n              >\n                Camera\n              </Button>\n              <Button\n                mode=\"contained\"\n                icon=\"image-area\"\n                onPress={pickfromGallery}\n                style={{ marginTop: 10, alignSelf: \"center\" }}\n              >\n                Gallery\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={() => setModalVisible(!modalVisible)}\n                style={{ marginTop: 10, alignSelf: \"center\" }}\n              >\n                Cancel\n              </Button>\n            </View>\n          </Modal>\n          <Button\n            mode=\"contained\"\n            onPress={_onSignUpPressed}\n            style={{ marginTop: 6 }}\n          >\n            Sign Up\n          </Button>\n          <View style={styles.row}>\n            <Text>Already have an account? </Text>\n            <TouchableOpacity onPress={() => navigation.goBack(\"LoginScreen\")}>\n              <Text style={styles.link}>Login</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  headcon: {\n    alignItems: \"center\",\n  },\n  container: {\n    width: \"80%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n    alignItems: \"center\",\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary,\n  },\n  modalview: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#e9f0ef\",\n  },\n});\n\nexport default DocReg;\n"]},"metadata":{},"sourceType":"module"}