{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Text } from 'react-native-paper';\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { RadioButton } from 'react-native-paper';\nimport { Picker } from '@react-native-picker/picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Genral = function Genral(_ref) {\n  var props = _ref.props,\n      navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalVisible = _useState10[0],\n      setModalVisible = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _React$useState = React.useState('male'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var otherParam = route.params.otherParam;\n\n  var _onNextPressed = function _onNextPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    var emptyError = emptyfield(phone.value);\n\n    if (emailError || passwordError || nameError || emptyError || role) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      setPhone(_objectSpread(_objectSpread({}, empty), {}, {\n        error: emptyError\n      }));\n      return;\n    }\n\n    navigation.navigate(otherParam);\n  };\n\n  var pickfromGallery = function pickfromGallery() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickfromCamera = function pickfromCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"skyblue\",\n      translucent: true\n    }), _jsx(ScrollView, {\n      style: styles.head,\n      children: _jsxs(View, {\n        style: styles.headcon,\n        children: [_jsx(Header, {\n          children: \"Create Account\"\n        }), _jsx(TextInput, {\n          label: \"Name\",\n          returnKeyType: \"next\",\n          value: name.value,\n          onChangeText: function onChangeText(text) {\n            return setName({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!name.error,\n          errorText: name.error\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          returnKeyType: \"next\",\n          value: email.value,\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!email.error,\n          errorText: email.error,\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"Phone No\",\n          returnKeyType: \"next\",\n          value: phone.value,\n          onChangeText: function onChangeText(text) {\n            return setPhone({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!phone.error,\n          errorText: phone.error\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          returnKeyType: \"done\",\n          value: password.value,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              value: text,\n              error: ''\n            });\n          },\n          error: !!password.error,\n          errorText: password.error,\n          secureTextEntry: true\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          icon: 'upload',\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          labelStyle: {\n            color: '#3d3c3a'\n          },\n          style: {\n            marginTop: 6,\n            padding: 4,\n            width: '100%',\n            borderWidth: 1\n          },\n          children: \"Upload Image\"\n        }), _jsx(Image, {\n          style: styles.imagearea,\n          source: {\n            uri: image\n          }\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: styles.modalview,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              icon: \"camera\",\n              onPress: pickfromCamera,\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Camera\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              icon: \"image-area\",\n              onPress: pickfromGallery,\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Gallery\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              style: {\n                marginTop: 10,\n                alignSelf: 'center'\n              },\n              children: \"Cancel\"\n            })]\n          })\n        }), _jsxs(View, {\n          style: {\n            marginRight: 80\n          },\n          children: [_jsx(Text, {\n            style: styles.txt,\n            children: \" Gender\"\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(RadioButton, {\n              value: \"male\",\n              color: \"#18b4f5\",\n              status: checked === 'male' ? 'checked' : 'unchecked',\n              onPress: function onPress() {\n                return setChecked('male');\n              }\n            }), _jsx(Text, {\n              style: styles.ratxt,\n              children: \" Male\"\n            }), _jsx(RadioButton, {\n              value: \"female\",\n              color: \"#18b4f5\",\n              status: checked === 'female' ? 'checked' : 'unchecked',\n              onPress: function onPress() {\n                return setChecked('female');\n              }\n            }), _jsx(Text, {\n              style: styles.ratxt,\n              children: \" Female\"\n            }), _jsx(RadioButton, {\n              value: \"other\",\n              color: \"#18b4f5\",\n              status: checked === 'other' ? 'checked' : 'unchecked',\n              onPress: function onPress() {\n                return setChecked('other');\n              }\n            }), _jsx(Text, {\n              style: styles.ratxt,\n              children: \" Other\"\n            })]\n          })]\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return navigation.navigate(otherParam);\n          },\n          style: {\n            marginTop: 10\n          },\n          children: \"Next\"\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"Already have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.goBack('LoginScreen');\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Login\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  headcon: {\n    alignItems: 'center'\n  },\n  container: {\n    width: '80%',\n    height: '100%',\n    alignSelf: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 6,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  modalview: {\n    position: 'absolute',\n    bottom: 2,\n    width: '100%',\n    backgroundColor: '#e9f0ef'\n  },\n  txt: {\n    marginTop: 6,\n    marginLeft: 5,\n    fontSize: 16\n  },\n  ratxt: {\n    marginTop: 8,\n    fontSize: 14\n  }\n});\nexport default Genral;","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/Registration/Genral.js"],"names":["React","useState","Text","Logo","Header","Button","TextInput","theme","emailValidator","passwordValidator","nameValidator","emptyfield","ImagePicker","RadioButton","Picker","Genral","props","navigation","route","value","error","name","setName","email","setEmail","password","setPassword","phone","setPhone","modalVisible","setModalVisible","image","setImage","checked","setChecked","otherParam","params","_onNextPressed","nameError","emailError","passwordError","emptyError","role","empty","navigate","pickfromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","cropping","width","height","quality","result","console","log","cancelled","uri","pickfromCamera","launchCameraAsync","styles","container","head","headcon","text","color","marginTop","padding","borderWidth","imagearea","Alert","alert","modalview","alignSelf","marginRight","txt","flexDirection","ratxt","row","goBack","link","StyleSheet","create","flex","alignItems","marginBottom","fontWeight","colors","primary","position","bottom","backgroundColor","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {ScrollView, View, StyleSheet, TouchableOpacity,Alert, Modal, Image,StatusBar } from 'react-native';\nimport { Text } from 'react-native-paper';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\n//import Uplaod from '../components/Upload';\n//import { Button } from 'react-native-paper';\nimport TextInput from '../components/TextInput';\n//import Dropdown from '../components/Dropdown';\nimport { theme } from '../core/theme';\nimport { emailValidator } from '../helpers/emailValidator';\nimport { passwordValidator } from '../helpers/passwordValidator';\nimport { nameValidator } from '../helpers/nameValidator';\nimport {emptyfield } from '../helpers/emptyfield';\nimport * as ImagePicker from 'expo-image-picker';\nimport { RadioButton } from 'react-native-paper';\nimport {Picker} from '@react-native-picker/picker';\n\n\n\nconst Genral = ( {props, navigation, route}) => {\n const [name, setName] = useState({ value: '', error: '' });\n  const [email, setEmail] = useState({ value: '', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n  const [phone, setPhone] = useState({ value: '', error: '' });\n  const [modalVisible, setModalVisible] = useState(false);\n  const [image, setImage] = useState();\n  const [checked, setChecked] = React.useState('male');\n\n  const {otherParam}  = route.params;\n // console.log(otherParam)\n  // const [selectedValue, setSelectedValue] = useState(\"\");\n  // console.log(selectedValue)\n\n  // const DropdownRole = () => {\n  //   return (\n  //     <View style={{width: \"100%\",\n  //       height: 53,\n  //       borderWidth: 1,\n  //       borderRadius: 4,\n  //       margin: 10,\n  //       borderColor: \"gray\",\n  //       backgroundColor: 'white',\n  //       color:'red'}}>\n  //       <Picker\n  //         selectedValue={selectedValue}\n  //         itemStyle = {'blue'}\n  //         style={[{ height: '100%', width: '100%'}, styles.pick]}\n  //         onValueChange={(itemValue) => setSelectedValue(itemValue)}\n  //         mode =\"dropdown\"\n  //         onPress\n  //       >\n  //         <Picker.Item label=\"Choose Role\" value=\"\" />\n  //         <Picker.Item label=\"Patient\" value=\"Pa\" />\n  //         <Picker.Item label=\"Doctor\" value=\"doc\" />\n  //         <Picker.Item label=\"Pharmacist\" value=\"phar\" />\n  //         <Picker.Item label=\"Ambulance\" value=\"ambu\" />\n  //         <Picker.Item label=\"Blood Donor\" value=\"bd\" />\n  //         <Picker.Item label=\"Laboratory\" value=\"lab\" />\n  //       </Picker>\n  //     </View>\n  //   );\n  // }\n\n\n  const _onNextPressed = () => {\n    const nameError = nameValidator(name.value);\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n    const emptyError = emptyfield(phone.value);\n    //const role = Valuecheck();\n\n    if (emailError || passwordError || nameError || emptyError||role) {\n      setName({ ...name, error: nameError });\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      setPhone({ ...empty, error: emptyError });\n      \n      // fetch(\"http://192.168.18.10:5000/api/patient\",{\n      //   methood: \"post\",\n      //   headers:{\n      //     'Content-Type': 'application/json'\n      //   },\n      //   body:JSON.stringify({\n      //     name, \n      //     email,\n      //     password,\n      //     empty\n      //   })\n      // })\n      // .then(res=>res.json())\n      // .then(data => {\n      //   console.log(data)\n      // })\n    // const Valuecheck = ()=> {\n    //     if (selectedValue === 'pa'){\n    //     return 'PaReg'\n    //     }\n    //     else if (selectedValue === 'doc'){\n    //     return 'DocReg'\n    //     }\n    //     else if (selectedValue === 'phar'){\n    //     return 'PharReg'\n    //     }\n    //     else if (selectedValue === 'ambu'){\n    //     return 'AmReg'\n    //     }\n    //     else if (selectedValue === 'bd'){\n    //     return 'BDReg'\n    //     }\n    //     else if (selectedValue === 'lab'){\n    //     return 'LaReg'\n    //     }\n    // }\n      return;}\n    navigation.navigate(otherParam);\n  };\n  const pickfromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width:300, \n      height:300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  }\n  const pickfromCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width:300, \n      height:300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  }\n  \n// const _onSignUpPressed = () => {\n//    try {\n//       if (email.value !== '' && password.value !== '') {\n//           auth.createUserWithEmailAndPassword(email.value, password.value); \n//           navigation.replace('LoginScreen', {otherParam: String})\n//       }\n//     } catch (error) {\n//         alert(error.message)\n//     }\n//   };\n\n  return (\n    <View style= {styles.container}>\n      <StatusBar backgroundColor=\"skyblue\" translucent={true}/>\n      {/* <Logo /> */}\n      <ScrollView style= {styles.head}>\n      <View style= {styles.headcon}>\n      <Header>Create Account</Header>\n\n      <TextInput\n        label=\"Name\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={text => setName({ value: text, error: '' })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Phone No\"\n        returnKeyType=\"next\"\n        value={phone.value}\n        onChangeText={text => setPhone({ value: text, error: '' })}\n        error={!!phone.error}\n        errorText={phone.error}\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      {/* <DropdownRole/> */}\n      \n      <Button\n        mode=\"outlined\"\n        icon = {'upload'} \n        onPress = {() =>setModalVisible(true)}\n        labelStyle={{color: '#3d3c3a'}}\n        style={{marginTop: 6, padding:4, width:'100%',borderWidth: 1}}>\n        Upload Image\n      </Button>\n      <Image style = {styles.imagearea} source ={{uri:image}}></Image>\n      <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style = {styles.modalview}>\n          <Button\n            mode=\"contained\"\n            icon = 'camera'\n            onPress = {pickfromCamera}\n            style={{marginTop: 10, alignSelf: 'center', }}>\n            Camera\n          </Button>\n          <Button\n            mode=\"contained\"\n            icon = 'image-area'\n            onPress = {pickfromGallery}\n            style={{marginTop: 10, alignSelf: 'center' }}>\n            Gallery\n          </Button>\n          <Button\n            mode=\"contained\"\n            onPress = {()=> setModalVisible(!modalVisible)}\n            style={{marginTop: 10, alignSelf: 'center' }}>\n            Cancel\n          </Button>\n          </View>\n        \n        </Modal>\n        <View style = {{marginRight:80}}>\n            <Text style = {styles.txt}> Gender</Text>\n            <View style = {{flexDirection: 'row'}}>\n                <RadioButton\n                    value=\"male\"\n                    color= '#18b4f5'\n                    status={ checked === 'male' ? 'checked' : 'unchecked' }\n                    onPress={() => setChecked('male')}\n                />\n                <Text style = {styles.ratxt}> Male</Text>\n                <RadioButton\n                    value=\"female\"\n                    color= '#18b4f5'\n                    status={ checked === 'female' ? 'checked' : 'unchecked' }\n                    onPress={() => setChecked('female')}\n                />\n                <Text style = {styles.ratxt}> Female</Text>\n                <RadioButton\n                    value=\"other\"\n                    color= '#18b4f5'\n                    status={ checked === 'other' ? 'checked' : 'unchecked' }\n                    onPress={() => setChecked('other')}\n                />\n                <Text style = {styles.ratxt}> Other</Text>\n                </View>\n            </View>\n\n      <Button\n        mode=\"contained\"\n        onPress={() => navigation.navigate(otherParam)}\n        style={{marginTop: 10 }}>\n        Next\n      </Button>\n      <View style={styles.row}>\n        <Text>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.goBack('LoginScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n      </View>\n      </ScrollView>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  headcon: {\n    alignItems: 'center',\n  },\n  container: {\n    width: '80%',\n    height: '100%',\n    alignSelf:'center',\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 6,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  modalview: {\n    position: 'absolute',\n    bottom:2,\n    width:'100%',\n    backgroundColor: '#e9f0ef'\n  },\n  txt: {\n    marginTop: 6,\n    marginLeft: 5,\n    fontSize: 16 \n},\nratxt: {\n    marginTop: 8,\n    fontSize: 14 \n},\n})\n\nexport default Genral;\n"]},"metadata":{},"sourceType":"module"}