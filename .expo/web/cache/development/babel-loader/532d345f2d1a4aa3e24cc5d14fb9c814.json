{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Text } from \"react-native-paper\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport axios from \"axios\";\nimport url from \"../../../url.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaReg = function PaReg(_ref) {\n  var props = _ref.props,\n      navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empty = _useState8[0],\n      setEmpty = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalVisible = _useState10[0],\n      setModalVisible = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var emptyError = emptyfield(empty.value);\n    var form_data = new FormData();\n    form_data.append(\"name\", name);\n    form_data.append(\"email\", email);\n    form_data.append(\"password\", password);\n    form_data.append(\"user_type\", \"patient\");\n    console.log(\"before axios\");\n    axios({\n      method: \"post\",\n      url: url.url + \"users/signup\",\n      data: form_data,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(function (res) {\n      console.log(res.data);\n    }).catch(function (err) {\n      console.log(\"Registration Error : \", err);\n    });\n    console.log(\"after axios\");\n\n    if (emailError || nameError || emptyError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: \"\"\n      }));\n      setEmpty(_objectSpread(_objectSpread({}, empty), {}, {\n        error: emptyError\n      }));\n      return;\n    }\n\n    navigation.navigate(\"LoginScreen\", {\n      otherParam: \"PaReg\"\n    });\n  };\n\n  var pickfromGallery = function pickfromGallery() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickfromCamera = function pickfromCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickfromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              cropping: true,\n              width: 300,\n              height: 300,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"skyblue\",\n      translucent: true\n    }), _jsx(ScrollView, {\n      style: styles.head,\n      children: _jsxs(View, {\n        style: styles.headcon,\n        children: [_jsx(Header, {\n          children: \"Create Account\"\n        }), _jsx(TextInput, {\n          label: \"Name\",\n          returnKeyType: \"next\",\n          value: name.value,\n          onChangeText: function onChangeText(text) {\n            return setName({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!name.error,\n          errorText: name.error\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          returnKeyType: \"next\",\n          value: email.value,\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!email.error,\n          errorText: email.error,\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"Phone No\",\n          returnKeyType: \"next\",\n          value: empty.value,\n          onChangeText: function onChangeText(text) {\n            return setEmpty({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!empty.error,\n          errorText: empty.error\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          returnKeyType: \"done\",\n          value: password.value,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!password.error,\n          errorText: password.error,\n          secureTextEntry: true\n        }), _jsx(Dropdown, {}), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"upload\",\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          labelStyle: {\n            color: \"#3d3c3a\"\n          },\n          style: {\n            marginTop: 6,\n            padding: 4,\n            width: \"100%\",\n            borderWidth: 1\n          },\n          children: \"Upload Image\"\n        }), _jsx(Image, {\n          style: styles.imagearea,\n          source: {\n            uri: image\n          }\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: styles.modalview,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              icon: \"camera\",\n              onPress: pickfromCamera,\n              style: {\n                marginTop: 10,\n                alignSelf: \"center\"\n              },\n              children: \"Camera\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              icon: \"image-area\",\n              onPress: pickfromGallery,\n              style: {\n                marginTop: 10,\n                alignSelf: \"center\"\n              },\n              children: \"Gallery\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              style: {\n                marginTop: 10,\n                alignSelf: \"center\"\n              },\n              children: \"Cancel\"\n            })]\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: _onSignUpPressed,\n          style: {\n            marginTop: 10\n          },\n          children: \"Sign Up\"\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"Already have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.goBack(\"LoginScreen\");\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Login\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  headcon: {\n    alignItems: \"center\"\n  },\n  container: {\n    width: \"80%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n    alignItems: \"center\"\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 6,\n    marginBottom: 20\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  modalview: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#e9f0ef\"\n  }\n});\nexport default PaReg;","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/Registration/PaReg.js"],"names":["React","useState","Text","Logo","Header","Button","TextInput","Dropdown","theme","emailValidator","passwordValidator","nameValidator","emptyfield","ImagePicker","axios","url","PaReg","props","navigation","route","value","error","name","setName","email","setEmail","password","setPassword","empty","setEmpty","modalVisible","setModalVisible","image","setImage","_onSignUpPressed","nameError","emailError","emptyError","form_data","FormData","append","console","log","method","data","headers","then","res","catch","err","navigate","otherParam","pickfromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","cropping","width","height","quality","result","cancelled","uri","pickfromCamera","launchCameraAsync","styles","container","head","headcon","text","color","marginTop","padding","borderWidth","imagearea","Alert","alert","modalview","alignSelf","row","goBack","link","StyleSheet","create","flex","alignItems","flexDirection","marginBottom","fontWeight","colors","primary","position","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ScrollView,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Image,\n  StatusBar,\n} from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\n//import Uplaod from '../components/Upload';\n//import { Button } from 'react-native-paper';\nimport TextInput from \"../components/TextInput\";\nimport Dropdown from \"../components/Dropdown\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { emptyfield } from \"../helpers/emptyfield\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport axios from \"axios\";\nimport url from \"../../../url.json\";\n// import Firebase from \"../firebase\";\n// const auth = Firebase.auth();\n\nconst PaReg = ({ props, navigation, route }) => {\n  const [name, setName] = useState({ value: \"\", error: \"\" });\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [empty, setEmpty] = useState({ value: \"\", error: \"\" });\n  const [modalVisible, setModalVisible] = useState(false);\n  const [image, setImage] = useState();\n\n  const _onSignUpPressed = () => {\n    const nameError = nameValidator(name.value);\n    const emailError = emailValidator(email.value);\n    //const passwordError = passwordValidator(password.value);\n    const emptyError = emptyfield(empty.value);\n\n    let form_data = new FormData();\n    form_data.append(\"name\", name);\n    form_data.append(\"email\", email);\n    form_data.append(\"password\", password);\n    form_data.append(\"user_type\", \"patient\");\n\n    console.log(\"before axios\");\n\n    axios({\n      method: \"post\",\n      url: `${url.url}users/signup`,\n      data: form_data,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Registration Error : \", err);\n      });\n    console.log(\"after axios\");\n\n    if (emailError || nameError || emptyError) {\n      setName({ ...name, error: nameError });\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: \"\" });\n      setEmpty({ ...empty, error: emptyError });\n\n      // fetch(\"http://192.168.18.10:5000/api/patient\",{\n      //   methood: \"post\",\n      //   headers:{\n      //     'Content-Type': 'application/json'\n      //   },\n      //   body:JSON.stringify({\n      //     name,\n      //     email,\n      //     password,\n      //     empty\n      //   })\n      // })\n      // .then(res=>res.json())\n      // .then(data => {\n      //   console.log(data)\n      // })\n\n      return;\n    }\n    navigation.navigate(\"LoginScreen\", { otherParam: \"PaReg\" });\n  };\n  const pickfromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width: 300,\n      height: 300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n  const pickfromCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      cropping: true,\n      width: 300,\n      height: 300,\n      //aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  // const _onSignUpPressed = () => {\n  //    try {\n  //       if (email.value !== '' && password.value !== '') {\n  //           auth.createUserWithEmailAndPassword(email.value, password.value);\n  //           navigation.replace('LoginScreen', {otherParam: String})\n  //       }\n  //     } catch (error) {\n  //         alert(error.message)\n  //     }\n  //   };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor=\"skyblue\" translucent={true} />\n      {/* <Logo /> */}\n      <ScrollView style={styles.head}>\n        <View style={styles.headcon}>\n          <Header>Create Account</Header>\n\n          <TextInput\n            label=\"Name\"\n            returnKeyType=\"next\"\n            value={name.value}\n            onChangeText={(text) => setName({ value: text, error: \"\" })}\n            error={!!name.error}\n            errorText={name.error}\n          />\n          <TextInput\n            label=\"Email\"\n            returnKeyType=\"next\"\n            value={email.value}\n            onChangeText={(text) => setEmail({ value: text, error: \"\" })}\n            error={!!email.error}\n            errorText={email.error}\n            autoCapitalize=\"none\"\n            autoCompleteType=\"email\"\n            textContentType=\"emailAddress\"\n            keyboardType=\"email-address\"\n          />\n          <TextInput\n            label=\"Phone No\"\n            returnKeyType=\"next\"\n            value={empty.value}\n            onChangeText={(text) => setEmpty({ value: text, error: \"\" })}\n            error={!!empty.error}\n            errorText={empty.error}\n          />\n\n          <TextInput\n            label=\"Password\"\n            returnKeyType=\"done\"\n            value={password.value}\n            onChangeText={(text) => setPassword({ value: text, error: \"\" })}\n            error={!!password.error}\n            errorText={password.error}\n            secureTextEntry\n          />\n          <Dropdown />\n          <Button\n            mode=\"outlined\"\n            icon={\"upload\"}\n            onPress={() => setModalVisible(true)}\n            labelStyle={{ color: \"#3d3c3a\" }}\n            style={{ marginTop: 6, padding: 4, width: \"100%\", borderWidth: 1 }}\n          >\n            Upload Image\n          </Button>\n          <Image style={styles.imagearea} source={{ uri: image }}></Image>\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {\n              Alert.alert(\"Modal has been closed.\");\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View style={styles.modalview}>\n              <Button\n                mode=\"contained\"\n                icon=\"camera\"\n                onPress={pickfromCamera}\n                style={{ marginTop: 10, alignSelf: \"center\" }}\n              >\n                Camera\n              </Button>\n              <Button\n                mode=\"contained\"\n                icon=\"image-area\"\n                onPress={pickfromGallery}\n                style={{ marginTop: 10, alignSelf: \"center\" }}\n              >\n                Gallery\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={() => setModalVisible(!modalVisible)}\n                style={{ marginTop: 10, alignSelf: \"center\" }}\n              >\n                Cancel\n              </Button>\n            </View>\n          </Modal>\n\n          <Button\n            mode=\"contained\"\n            onPress={_onSignUpPressed}\n            style={{ marginTop: 10 }}\n          >\n            Sign Up\n          </Button>\n          <View style={styles.row}>\n            <Text>Already have an account? </Text>\n            <TouchableOpacity onPress={() => navigation.goBack(\"LoginScreen\")}>\n              <Text style={styles.link}>Login</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  head: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  headcon: {\n    alignItems: \"center\",\n  },\n  container: {\n    width: \"80%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n    alignItems: \"center\",\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 6,\n    marginBottom: 20,\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary,\n  },\n  modalview: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#e9f0ef\",\n  },\n});\n\nexport default PaReg;\n"]},"metadata":{},"sourceType":"module"}