{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { Provider } from \"react-native-paper\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Button } from \"react-native-paper\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { theme } from \"./core/theme\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Dashboard, NotificationsTab, StartScreen } from \"./User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: _jsx(Text, {\n      children: \"Settings!\"\n    })\n  });\n}\n\nfunction Signout(_ref) {\n  var navigation = _ref.navigation;\n\n  var handleSignOut = function handleSignOut() {\n    return _regeneratorRuntime.async(function handleSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            navigation.navigate(\"StartScreen\", {\n              otherParam: null\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: _jsx(Button, {\n      style: {\n        backgroundColor: \"#F4F4F4\",\n        marginLeft: 20,\n        width: 145,\n        borderRadius: 50\n      },\n      mode: \"outlined\",\n      onPress: handleSignOut,\n      children: \"Signout\"\n    })\n  });\n}\n\nvar MyTabs = function MyTabs(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(Provider, {\n    theme: theme,\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Dashboard\",\n      activeColor: \"white\",\n      barStyle: {\n        backgroundColor: theme.colors.primary\n      },\n      screenOptions: {\n        tabBarActiveTintColor: \"#18b4f5\",\n        tabBarInactiveTintColor: \"white\",\n        tabBarActiveBackgroundColor: \"#ffff\",\n        tabBarInactiveBackgroundColor: \"#18b4f5\"\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Dashboard\",\n        component: Dashboard,\n        options: function options(_ref3) {\n          var navigation = _ref3.navigation,\n              route = _ref3.route;\n          return {\n            title: \"Sehat Markaz\",\n            tabBarLabel: \"Dashboard\",\n            headerTitleAlign: \"center\",\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"home\",\n                color: color,\n                size: 26\n              });\n            }\n          };\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: NotificationsTab,\n        options: {\n          tabBarLabel: \"Profile\",\n          headerTitleAlign: \"center\",\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color;\n            return _jsx(FontAwesome, {\n              name: \"user\",\n              size: 25,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Appointments\",\n        component: NotificationsTab,\n        options: {\n          tabBarLabel: \"Appointments\",\n          headerTitleAlign: \"center\",\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"calendar-clock\",\n              color: color,\n              size: 26\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Notiications\",\n        component: NotificationsTab,\n        options: {\n          tabBarLabel: \"Notiications\",\n          headerTitleAlign: \"center\",\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var color = _ref7.color;\n            return _jsx(FontAwesome, {\n              name: \"bell\",\n              size: 25,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Logout\",\n        component: Signout,\n        options: {\n          tabBarLabel: \"LogOut\",\n          tabBarIcon: function tabBarIcon(_ref8) {\n            var color = _ref8.color;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"logout\",\n              color: color,\n              size: 26\n            });\n          }\n        }\n      })]\n    })\n  });\n};\n\nexport default function Navigation() {\n  return _jsx(MyTabs, {});\n}","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/Navigation.js"],"names":["React","Provider","Button","MaterialCommunityIcons","theme","FontAwesome","createBottomTabNavigator","Dashboard","NotificationsTab","StartScreen","Tab","SettingsScreen","flex","justifyContent","alignItems","Signout","navigation","handleSignOut","navigate","otherParam","backgroundColor","marginLeft","width","borderRadius","MyTabs","colors","primary","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","route","title","tabBarLabel","headerTitleAlign","tabBarIcon","color","Navigation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-native-paper\";\nimport { Text, View, Pressable } from \"react-native\";\nimport { Button } from \"react-native-paper\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { theme } from \"./core/theme\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport { Dashboard, NotificationsTab, StartScreen } from \"./User\";\n\n// import Firebase from './firebase';\n// const auth = Firebase.auth();\n\nconst Tab = createBottomTabNavigator();\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\nfunction Signout({ navigation }) {\n  const handleSignOut = async () => {\n    // try {\n    //   await auth.signOut().then(\n    navigation.navigate(\"StartScreen\", { otherParam: null }); //);\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Button\n        style={{\n          backgroundColor: \"#F4F4F4\",\n          marginLeft: 20,\n          width: 145,\n          borderRadius: 50,\n        }}\n        mode=\"outlined\"\n        onPress={handleSignOut}\n      >\n        Signout\n      </Button>\n    </View>\n  );\n}\n\nconst MyTabs = ({ navigation }) => {\n  return (\n    <Provider theme={theme}>\n      <Tab.Navigator\n        initialRouteName=\"Dashboard\"\n        activeColor=\"white\"\n        barStyle={{ backgroundColor: theme.colors.primary }}\n        screenOptions={{\n          tabBarActiveTintColor: \"#18b4f5\",\n          tabBarInactiveTintColor: \"white\",\n          tabBarActiveBackgroundColor: \"#ffff\",\n          tabBarInactiveBackgroundColor: \"#18b4f5\",\n        }}\n      >\n        <Tab.Screen\n          name=\"Dashboard\"\n          component={Dashboard}\n          options={({ navigation, route }) => ({\n            title: \"Sehat Markaz\",\n            tabBarLabel: \"Dashboard\",\n            headerTitleAlign: \"center\",\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n            // headerRight: () => (\n            //   <Pressable\n            //       onPress={() => navigation.navigate('NotificationsTab')}\n            //       style={({ pressed }) => ({\n            //           opacity: pressed ? 0.5 : 1,\n            //       })}>\n            //       <FontAwesome\n            //           name=\"bell-o\"\n            //           size={25}\n            //           color='black'\n            //           style={{ marginRight: 20 }}\n            //       />\n            //   </Pressable>\n            //   ),\n          })}\n        />\n        {/* <Tab.Screen\n        name=\"ViewProfile\"\n        component={SettingsScreen}\n        options={{\n          tabBarLabel: 'Profile',\n          headerTitleAlign: 'center',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"account\" color={color} size={26} />\n          ),\n          headerRight: () => (\n            <Pressable\n                onPress={() => navigation.navigate('NotificationsTab')}\n                style={({ pressed }) => ({\n                    opacity: pressed ? 0.5 : 1,\n                })}>\n                <FontAwesome\n                    name=\"bell-o\"\n                    size={25}\n                    color='black'\n                    style={{ marginRight: 20 }}\n                />\n            </Pressable>\n            ),\n        }}\n      /> */}\n        <Tab.Screen\n          name=\"Profile\"\n          component={NotificationsTab}\n          options={{\n            tabBarLabel: \"Profile\",\n            headerTitleAlign: \"center\",\n            tabBarIcon: ({ color }) => (\n              <FontAwesome name=\"user\" size={25} color={color} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Appointments\"\n          component={NotificationsTab}\n          options={{\n            tabBarLabel: \"Appointments\",\n            headerTitleAlign: \"center\",\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons\n                name=\"calendar-clock\"\n                color={color}\n                size={26}\n              />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Notiications\"\n          component={NotificationsTab}\n          options={{\n            tabBarLabel: \"Notiications\",\n            headerTitleAlign: \"center\",\n            tabBarIcon: ({ color }) => (\n              <FontAwesome name=\"bell\" size={25} color={color} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Logout\"\n          component={Signout}\n          options={{\n            tabBarLabel: \"LogOut\",\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"logout\" color={color} size={26} />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    </Provider>\n  );\n};\n\nexport default function Navigation() {\n  return <MyTabs />;\n}\n"]},"metadata":{},"sourceType":"module"}