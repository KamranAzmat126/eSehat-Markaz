{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = [];\nvar cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialState,\n  reducers: {\n    addToCart: function addToCart(state, _ref) {\n      var payload = _ref.payload;\n      console.log(payload);\n      var id = payload.id;\n      var find = state.find(function (item) {\n        return item.id === id;\n      });\n\n      if (find) {\n        console.log('yes');\n        return state.map(function (item) {\n          return item.id === id ? _objectSpread(_objectSpread({}, item), {}, {\n            quantity: item.quantity + 1\n          }) : item;\n        });\n      } else {\n        state.push(_objectSpread(_objectSpread({}, payload), {}, {\n          quantity: 1\n        }));\n      }\n    },\n    increment: function increment(state, _ref2) {\n      var payload = _ref2.payload;\n      return state.map(function (item) {\n        return item.id === payload ? _objectSpread(_objectSpread({}, item), {}, {\n          quantity: item.quantity + 1\n        }) : item;\n      });\n    },\n    decrement: function decrement(state, _ref3) {\n      var payload = _ref3.payload;\n      return state.map(function (item) {\n        return item.id === payload ? _objectSpread(_objectSpread({}, item), {}, {\n          quantity: item.quantity - 1\n        }) : item;\n      });\n    },\n    removeItem: function removeItem(state, action) {\n      var itemId = action.payload;\n      return state.filter(function (item) {\n        return item.id !== itemId;\n      });\n    },\n    clear: function clear(state) {\n      return [];\n    }\n  }\n});\nvar _cartSlice$actions = cartSlice.actions,\n    addToCart = _cartSlice$actions.addToCart,\n    increment = _cartSlice$actions.increment,\n    decrement = _cartSlice$actions.decrement,\n    removeItem = _cartSlice$actions.removeItem,\n    clear = _cartSlice$actions.clear;\nexport { addToCart, increment, decrement, removeItem, clear };\nvar cartReducer = cartSlice.reducer;\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/kamra/Sehat-Markaz-main/src/screens/redux/features/cart/cartSlice.js"],"names":["createSlice","initialState","cartSlice","name","reducers","addToCart","state","payload","console","log","id","find","item","map","quantity","push","increment","decrement","removeItem","action","itemId","filter","clear","actions","cartReducer","reducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAAY,EAAZA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ,qBACEC,KADF,QACsB;AAAA,UAAXC,OAAW,QAAXA,OAAW;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,UAAQG,EAAR,GAAeH,OAAf,CAAQG,EAAR;AAEA,UAAMC,IAAI,GAAGL,KAAK,CAACK,IAAN,CAAW,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,OAAX,CAAb;;AACA,UAAIC,IAAJ,EAAU;AACRH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,eAAOH,KAAK,CAACO,GAAN,CAAU,UAACD,IAAD;AAAA,iBACfA,IAAI,CAACF,EAAL,KAAYA,EAAZ,mCAESE,IAFT;AAGME,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAHhC,eAKIF,IANW;AAAA,SAAV,CAAP;AAQD,OAVD,MAUO;AACLN,QAAAA,KAAK,CAACS,IAAN,iCACKR,OADL;AAEEO,UAAAA,QAAQ,EAAE;AAFZ;AAID;AACF,KAvBO;AAwBRE,IAAAA,SAxBQ,qBAwBEV,KAxBF,SAwBsB;AAAA,UAAXC,OAAW,SAAXA,OAAW;AAC5B,aAAOD,KAAK,CAACO,GAAN,CAAU,UAACD,IAAD;AAAA,eACfA,IAAI,CAACF,EAAL,KAAYH,OAAZ,mCAESK,IAFT;AAGME,UAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAHhC,aAKIF,IANW;AAAA,OAAV,CAAP;AAQD,KAjCO;AAkCRK,IAAAA,SAlCQ,qBAkCEX,KAlCF,SAkCsB;AAAA,UAAXC,OAAW,SAAXA,OAAW;AAC5B,aAAOD,KAAK,CAACO,GAAN,CAAU,UAACD,IAAD;AAAA,eACfA,IAAI,CAACF,EAAL,KAAYH,OAAZ,mCAESK,IAFT;AAGME,UAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAHhC,aAKIF,IANW;AAAA,OAAV,CAAP;AAQD,KA3CO;AA4CRM,IAAAA,UAAU,EAAE,oBAACZ,KAAD,EAAQa,MAAR,EAAmB;AAI7B,UAAMC,MAAM,GAAGD,MAAM,CAACZ,OAAtB;AACA,aAAOD,KAAK,CAACe,MAAN,CAAa,UAACT,IAAD;AAAA,eAAUA,IAAI,CAACF,EAAL,KAAYU,MAAtB;AAAA,OAAb,CAAP;AACD,KAlDO;AAmDRE,IAAAA,KAnDQ,iBAmDFhB,KAnDE,EAmDK;AACX,aAAO,EAAP;AACD;AArDO;AAHkB,CAAD,CAA7B;AA4DO,yBACLJ,SAAS,CAACqB,OADL;AAAA,IAAQlB,SAAR,sBAAQA,SAAR;AAAA,IAAmBW,SAAnB,sBAAmBA,SAAnB;AAAA,IAA8BC,SAA9B,sBAA8BA,SAA9B;AAAA,IAAyCC,UAAzC,sBAAyCA,UAAzC;AAAA,IAAqDI,KAArD,sBAAqDA,KAArD;;AAEP,IAAME,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AAEA,eAAeD,WAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, { payload }) {\n      console.log(payload);\n      //uid is the unique id of the item\n      const { id } = payload;\n\n      const find = state.find((item) => item.id === id);\n      if (find) {\n        console.log('yes')\n        return state.map((item) =>\n          item.id === id\n            ? {\n                ...item,\n                quantity: item.quantity + 1,\n              }\n            : item\n        );\n      } else {\n        state.push({\n          ...payload,\n          quantity: 1,\n        });\n      }\n    },\n    increment(state, { payload }) {\n      return state.map((item) =>\n        item.id === payload\n          ? {\n              ...item,\n              quantity: item.quantity + 1,\n            }\n          : item\n      );\n    },\n    decrement(state, { payload }) {\n      return state.map((item) =>\n        item.id === payload\n          ? {\n              ...item,\n              quantity: item.quantity - 1,\n            }\n          : item\n      );\n    },\n    removeItem: (state, action) => {\n      //   console.log(state);\n      //   console.log(state);\n      //   console.log(action);\n      const itemId = action.payload;\n      return state.filter((item) => item.id !== itemId);\n    },\n    clear(state) {\n      return [];\n    },\n  },\n});\n\nexport const { addToCart, increment, decrement, removeItem, clear } =\n  cartSlice.actions;\nconst cartReducer = cartSlice.reducer;\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}